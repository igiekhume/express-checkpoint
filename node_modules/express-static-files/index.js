const path = require("path")
const fs = require("fs");
const imageTypes = require("./type.json").image;
const { cwd } = require("process");

function handleArgs(root, options) {
    // setting root folder defualt
    let FolderPath = root;

    // validation for root
    if (path.dirname(root) == ".") {
        FolderPath = path.join(cwd(), root);
    }

    // return un express call back 
    return (req, res, next) => {
        // first check requested url file extenstion exist or not 
        let extenstion = path.extname(req.url)

        if (!extenstion) return next()

        let fullPath = path.normalize(FolderPath + req.url);

        // check file exists or not
        if (!fs.existsSync(fullPath)) return next()

        // check image type exist or not 
        let isTypeExist = imageTypes.filter((ext) => ext.toLowerCase() == extenstion.toLowerCase())

        // if image type not exsit send file as it is 
        if (isTypeExist.length == 0) return res.sendFile(path.normalize(FolderPath + req.url))
        console.log("ok")

        // check headers
        if (req.header("Sec-Fetch-User")) {
            // load demo html 
            let DemoHTML = fs.readFileSync(path.join(__dirname, "demo.html")).toString()

            // change src $1_img MyImage to image path and title
            let ResonseHTML = DemoHTML.replaceAll("$MyImage", req.url).replaceAll("$MyTitle", path.parse(fullPath).name + extenstion);

            return res.send(ResonseHTML)
        }
        return res.sendFile(path.normalize(FolderPath + req.url))
    }
}

const ExpressStaticFiles = { static: handleArgs }

module.exports = ExpressStaticFiles;